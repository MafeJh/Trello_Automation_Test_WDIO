{
  "info": {
    "_postman_id": "278ba662-c0ef-4e8d-8be0-94df3fd41bbc",
    "name": "Trello API Tests",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "15586212",
    "_collection_link": "https://grey-crater-908717.postman.co/workspace/QA-postman~7c1d15e3-ece6-47ae-a97a-ab7a087b2210/collection/15586212-278ba662-c0ef-4e8d-8be0-94df3fd41bbc?action=share&source=collection_link&creator=15586212"
  },
  "item": [
    {
      "name": "Create Board",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const jsonData = pm.response.json();",
              "",
              "// Verifica que la respuesta sea exitosa",
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "// Verifica que la respuesta contiene un ID de board",
              "pm.test(\"Response contains board id\", function () {",
              "    pm.expect(jsonData.id).to.exist;",
              "});",
              "",
              "// Guarda el ID del board en el entorno para futuras peticiones",
              "pm.environment.set(\"boardId\", jsonData.id);",
              "",
              "// Verifica que la cabecera Content-Type sea JSON",
              "pm.test(\"Response has valid Content-Type\", function () {",
              "    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");",
              "});",
              "",
              "// Verifica que el cuerpo contiene el ID",
              "pm.test(\"Response contains board ID\", function () {",
              "    pm.expect(jsonData).to.have.property(\"id\");",
              "});",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [""],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "url": {
          "raw": "https://api.trello.com/1/boards?name={{board_name}}&key={{apiKey}}&token={{apiToken}}",
          "protocol": "https",
          "host": ["api", "trello", "com"],
          "path": ["1", "boards"],
          "query": [
            {
              "key": "name",
              "value": "{{board_name}}"
            },
            {
              "key": "key",
              "value": "{{apiKey}}"
            },
            {
              "key": "token",
              "value": "{{apiToken}}"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Get Board",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.test(\"Response contains correct board name\", function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.name).to.eql('TestBoard');",
              "});",
              "",
              "pm.test(\"Response contains expected fields\", function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property(\"id\");",
              "    pm.expect(jsonData).to.have.property(\"name\");",
              "    pm.expect(jsonData).to.have.property(\"desc\");",
              "});",
              "",
              "pm.test(\"Response has valid Content-Type\", function () {",
              "    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");",
              "});",
              "",
              "pm.test(\"Board name is correct\", function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.name).to.eql(pm.environment.get(\"board_name\"));",
              "});",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "https://api.trello.com/1/boards/{{boardId}}?key={{apiKey}}&token={{apiToken}}",
          "protocol": "https",
          "host": ["api", "trello", "com"],
          "path": ["1", "boards", "{{boardId}}"],
          "query": [
            {
              "key": "key",
              "value": "{{apiKey}}"
            },
            {
              "key": "token",
              "value": "{{apiToken}}"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Update Board",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response has valid Content-Type\", function () {",
              "    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");",
              "});",
              "",
              "pm.test(\"Board name updated successfully\", function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.name).to.eql('UpdatedBoard');",
              "});",
              "",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "PUT",
        "header": [],
        "url": {
          "raw": "https://api.trello.com/1/boards/{{boardId}}?name=UpdatedBoard&key={{apiKey}}&token={{apiToken}}",
          "protocol": "https",
          "host": ["api", "trello", "com"],
          "path": ["1", "boards", "{{boardId}}"],
          "query": [
            {
              "key": "name",
              "value": "UpdatedBoard"
            },
            {
              "key": "key",
              "value": "{{apiKey}}"
            },
            {
              "key": "token",
              "value": "{{apiToken}}"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Delete Board",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response has valid Content-Type\", function () {",
              "    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");",
              "});",
              "",
              "pm.test(\"Board is deleted successfully\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData._value).to.be.null;",
              "});",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "https://api.trello.com/1/boards/{{boardId}}?key={{apiKey}}&token={{apiToken}}",
          "protocol": "https",
          "host": ["api", "trello", "com"],
          "path": ["1", "boards", "{{boardId}}"],
          "query": [
            {
              "key": "key",
              "value": "{{apiKey}}"
            },
            {
              "key": "token",
              "value": "{{apiToken}}"
            }
          ]
        }
      },
      "response": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "packages": {},
        "exec": [""]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "packages": {},
        "exec": [""]
      }
    }
  ]
}
